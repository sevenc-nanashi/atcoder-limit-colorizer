// ==UserScript==
// @name AtCoder Limit Colorizer
// @description AtCoderの制約を色付けします
// @version 0.0.1
// @homepage https://github.com/sevenc-nanashi/atcoder-limit-colorizer
// @author Nanashi. <https://sevenc7c.com>
// @match https://atcoder.jp/contests/*/tasks/*
// @updateURL https://raw.githubusercontent.com/sevenc-nanashi/atcoder-limit-colorizer/built/index.user.js
// @downloadURL https://raw.githubusercontent.com/sevenc-nanashi/atcoder-limit-colorizer/built/index.user.js
// @sandbox MAIN_WORLD
// ==/UserScript==

"use strict";(()=>{var y="#804000",E="#008000",L="#00c0c0",S="#0000ff",T="#c0c000",C="#ff8000",M="#ff0000",H="#0dcaf0",m=r=>{let e=Math.abs(r);return e===998244353||e===1000000007?H:e>=1e18?M:e>=1e9?C:e>=1e5?T:e>=1e3?S:e>=100?L:e>=10?E:y};var d=r=>{let e="";for(let t of r)if(t.classList.contains("mord"))if(t.childElementCount>0){let n=d(Array.from(t.children));if(n===void 0)return;e+=n}else t.textContent==="\u2212"?e+="-":e+=t.textContent;else if(t.classList.contains("mbin"))e+=t.textContent;else if(t.classList.contains("msupsub")){let n=t.querySelector(".mtight");if(!n){console.warn("msupsub without mtight",t);return}let o=Array.from(n.querySelectorAll(":scope > span")),i=d(o);if(i===void 0)return;e+=`^(${i})`}return e},b=r=>{let e=0,t=[],n="";for(let o of r){if(o==="("){if(e++,e===1)continue}else if(o===")"&&(e--,e===0)){t.push(b(n)),n="";continue}e===0&&o==="\xD7"?(t.push(n),n="",t.push("*")):e===0&&o==="^"?(t.push(n),n="",t.push("^")):n+=o}return n.length>0&&t.push(n),t},f=r=>{let e=structuredClone(r);if(typeof e=="string")return Number.parseInt(e);if(typeof e=="number")return e;if(e.length===1)return Number.parseInt(e[0]);for(let t=1;t<e.length;t+=2)if(e[t]==="^"){let n=f(e[t-1]),o=f(e[t+1]);e.splice(t-1,3,n**o),t-=2}for(let t=1;t<e.length;t+=2)if(e[t]==="*"){let n=f(e[t-1]),o=f(e[t+1]);e.splice(t-1,3,n*o),t-=2}if(e.length!==1)throw new Error(`Invalid tree, ${e}`);if(typeof e[0]!="number")throw new Error(`Invalid tree, ${e}`);return e[0]},A=r=>{let e=d(r);if(e===void 0||!e.match(/^[0-9\-×\^()]+$/))return;let t=b(e),n=f(t),o=m(n);for(let i of r)i.style.color=o;return n},u=r=>{if(r.classList.contains("mord")){if(r.classList.contains("mathnormal"))return r.textContent??void 0;if(r.children[0]?.classList?.contains("mathnormal"))return r.children[0].textContent??void 0}},V=["mpunct","mrel","mopen","mclose","mop"],w=()=>{let r=Array.from(document.getElementsByTagName("h3")).filter(e=>e.textContent==="\u5236\u7D04"||e.textContent==="Constraints");for(let e of r){let t=e.nextElementSibling;if(!t)return;v(t)}},v=r=>{let e={},t=Array.from(r.querySelectorAll(".katex-html:not([data-alc-colorized])"));for(let n of t){n.setAttribute("data-alc-colorized","true");let o=Array.from(n.querySelectorAll(".base > span")).filter(a=>!!a.textContent),i=[],l={elements:[],maxValue:0},h=()=>{for(let a of l.elements.filter(s=>u(s))){let s=u(a);s&&(a.style.color=m(l.maxValue),e[s]=Math.abs(l.maxValue))}l.elements.length=0,l.maxValue=0},x=()=>{let a=A(i);a!==void 0&&Math.abs(a)>l.maxValue&&(l.maxValue=Math.abs(a)),i.length=0},p=!1;for(let[a,s]of o.entries()){if(p&&(p=!1,(!u(o[a-2])||!u(s))&&(l.elements.pop(),h())),s.classList.contains("mpunct")&&(p=!0),Array.from(s.classList).some(g=>V.includes(g))){i.length>0&&x(),l.elements.push(s);continue}let c=u(s);c&&e[c]&&(s.style.color=m(e[c]),l.maxValue<e[c]&&(l.maxValue=e[c])),i.push(s),l.elements.push(s)}i.length>0&&(x(),h())}};setInterval(()=>{w()},100);})();
//# sourceMappingURL=data:application/json;base64,
